@{
    Layout = null;

    var countriesParam = Request.Params["countries"];
    var selectedCountries = new HashSet<Backend.CountryType>();

    if (string.IsNullOrEmpty(countriesParam)) {
        selectedCountries.Add(Backend.CountryType.Austria);
        selectedCountries.Add(Backend.CountryType.Italy);
        selectedCountries.Add(Backend.CountryType.Usa);
        selectedCountries.Add(Backend.CountryType.China);
        selectedCountries.Add(Backend.CountryType.Germany);
        selectedCountries.Add(Backend.CountryType.UnitedKingdom);
    }
    else {
        var countriesAsString = countriesParam.Split(',');
        foreach (var countryAsString in countriesAsString) {
            if (!System.Enum.TryParse<Backend.CountryType>(countryAsString, true, out var result)) {
                continue;
            }

            if (selectedCountries.Contains(result)) {
                continue;
            }

            selectedCountries.Add(result);
        }
    }

    var graphUriParameter = "";
    foreach (var country in selectedCountries) {
        graphUriParameter += $"country={country.ToString()}&";
    }

    graphUriParameter = graphUriParameter.Substring(0, graphUriParameter.Length - 1);
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Corona Spread Viewer</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="header">
    </div>
    <div class="content">
        <div class="dataUpdate">
            <form>
                <div class="credentials">
                    <div class="credentialLabels">
                        <label for="username">Username</label>
                        <br />
                        <label for="password">Password</label>
                    </div>
                    <div class="credentialValues">
                        <input name="username" maxlength="100" type="text" required autocomplete="on" />
                        <br />
                        <input name="password" maxlength="100" type="password" required autocomplete="off" />
                    </div>
                </div>
                <input name="reimport" type="submit" formaction="api/data/reimport" formmethod="post" value="Update" />
            </form>
        </div>
        <div class="countrySelection">
            <form>
                <div class="countrySelectionInForm">
                    @{
                        var values = Enum.GetValues(typeof(Backend.CountryType));
                        var valuesReduced = new List<Backend.CountryType>();

                        foreach (var value in values) {
                            var valueCasted = (Backend.CountryType)value;
                            if (valueCasted == Backend.CountryType.Invalid) {
                                continue;
                            }

                            valuesReduced.Add(valueCasted);
                        }

                        for (var i = 0; i < valuesReduced.Count(); ++i) {
                            var value = valuesReduced[i];
                            <div class="countrySelectionBox">
                                @if (selectedCountries.Contains(value)) {
                                    <input type="checkbox" value="@value" name="selectedCountries" checked />
                                }
                                else {
                                    <input type="checkbox" value="@value" name="selectedCountries" />
                                }
                                <label for="@value">@value.ToString()</label>
                            </div>
                        }
                    }
                </div>
                <input name="apply" type="submit" formaction="api/selection/apply" formmethod="post" value="Apply Selection" />
            </form>
        </div>

        <div class="legendAndGraph">
            <div class="legend">
                <img src="api/graph/legend?@graphUriParameter" />
            </div>
            <div class="graphs">
                <div class="graph">
                    <div class="graphHeading">
                        <h1>Infected Persons Total, Logarithmic</h1>
                    </div>
                    <img src="api/graph/infected-absolute-logarithmic?@graphUriParameter" class="graph" />
                </div>
                <div class="graph">
                    <div class="graphHeading">
                        <h1>Infected Persons Total, Linear</h1>
                    </div>
                    <img src="api/graph/infected-absolute-linear?@graphUriParameter" class="graph" />
                </div>
                <div class="graph">
                    <div class="graphHeading">
                        <h1>Infected Persons Total per Population</h1>
                    </div>
                    <img src="api/graph/infected-per-population-logarithmic?@graphUriParameter" class="graph" />
                </div>
                <div class="graph">
                    <div class="graphHeading">
                        <h1>Deaths this Day per Population</h1>
                    </div>
                    <img src="api/graph/deaths-per-population-logarithmic?@graphUriParameter" class="graph" />
                </div>
            </div>
        </div>
    </div>
</body>
</html>
